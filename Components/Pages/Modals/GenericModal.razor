<div class="modal fade @ModalClasses" tabindex="-1" role="dialog" aria-labelledby="videoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private string ModalClasses => IsOpen ? "show" : "";

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }

    private async Task CloseModal()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync(null);
        }
        IsOpen = false;
    }
}