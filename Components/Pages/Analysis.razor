@page "/Account/Analysis"
@rendermode InteractiveServer
@using Syncfusion.Blazor.Charts
@using InteractiveTyingGameBlazor.Components.Pages.Charts;
@using Data.Services;
@using Microsoft.AspNetCore.Authorization
@using InteractiveTyingGameBlazor.Components.Pages.Modals;
@inherits Common
@attribute [Authorize]
<div class="btn-group d-flex" role="group" aria-label="Basic example">
    <button type="button" class="btn btn-primary" @onclick="async () => await OnKeyChanged(0)">All users</button>
    <button type="button" class="btn btn-primary" @onclick="async () => await OnKeyChanged(1)">My progress</button>
</div>

@* <div style="text-align: right;">
    <button type="button" class="btn btn-primary" onclick="@ShowChartOptions">Change</button>
</div> *@

@RenderChart()

@* <ChartModal IsOpen=@Open Keys="@Charts.Keys" OnKeyChanged="@OnKeyChanged" 
   /> *@

@code {

    // public bool Open { get; set; }
    public string Key { get; set; } = Charts.Keys.First();

    public static Dictionary<string, Type> Charts = new Dictionary<string, Type> {
        {"All users cpm chart", typeof(UsersCPMStatisticChart)},
        {"Average user cpm chart", typeof(AverageUserCPMChart)},
    };

    private RenderFragment RenderChart() => builder =>
    {
        if (Charts.TryGetValue(Key, out var componentType))
        {
            builder.OpenComponent(0, componentType);
            builder.CloseComponent();
        }
    };

    private void ShowChartOptions()
    {
        // Open = true;
        StateHasChanged();
    }

    public async Task OnKeyChanged(int index)
    {
        Key = Charts.Keys.ElementAt(index);
        await InvokeAsync(StateHasChanged);
        // Open = false;
    }
}